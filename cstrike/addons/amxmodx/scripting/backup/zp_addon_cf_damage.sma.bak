/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <fun>
#include <zombieplague>
#include <cstrike>
#include <fakemeta>

#define PLUGIN "[ZP]Frag Dmg from CF"
#define VERSION "1.0"
#define AUTHOR "heka"

new g_Ham_Bot,g_msgScoreInfo
new cvar_frag_dmg_human, g_damagedealt_human[33]

public plugin_init() 
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	g_msgScoreInfo = get_user_msgid("ScoreInfo")
	RegisterHam(Ham_TakeDamage, "player", "fw_TakeDamage")
	
	cvar_frag_dmg_human = register_cvar("zp_human_damage_frag", "2000")
}
public client_putinserver(id)
{
	if(!g_Ham_Bot && is_user_bot(id))
	{
		g_Ham_Bot = 1
		set_task(0.1, "Do_RegisterHam_Bot", id)
	}
}
public Do_RegisterHam_Bot(id)
{
	RegisterHamFromEntity(Ham_TakeDamage, id, "fw_TakeDamage")
}
public fw_TakeDamage(victim, inflictor, attacker, Float:damage)
{
	if(!is_user_connected(attacker)&&!is_user_alive(attacker))
		return HAM_IGNORED;
		
	if(is_user_connected(victim)&&is_user_alive(victim))
		return HAM_IGNORED;
		
	if (get_pcvar_num(cvar_frag_dmg_human) > 0)
	{
		g_damagedealt_human[attacker] += floatround(damage)
		if (g_damagedealt_human[attacker] >= get_pcvar_num(cvar_frag_dmg_human))
		{
			UpdateFrags(attacker, 1, 1)
			g_damagedealt_human[attacker] = 0
		}
	}
}
// Update Player Frags and Deaths
UpdateFrags(attacker, frags, scoreboard)
{
	// Set attacker frags
	set_pev(attacker, pev_frags, float(pev(attacker, pev_frags) + frags))

	// Update scoreboard with attacker and victim info
	if (scoreboard)
	{
		message_begin(MSG_BROADCAST, g_msgScoreInfo)
		write_byte(attacker) // id
		write_short(pev(attacker, pev_frags)) // frags
		write_short(cs_get_user_deaths(attacker)) // deaths
		write_short(0) // class?
		write_short(fm_cs_get_user_team(attacker)) // team
		message_end()
	}
}
stock fm_cs_get_user_team(id)
{
	return get_pdata_int(id, 114, 5);
}
