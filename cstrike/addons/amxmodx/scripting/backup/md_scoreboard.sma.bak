/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <hamsandwich>
#include <cstrike>
#include <fakemeta>
#include <fun>
#include <metadrawer>
#include <zombieplague>

#define PLUGIN "Metadrawer Draw Rectangle Test"
#define VERSION "1.0"
#define AUTHOR "Agung"

//new cvarX,cvarY
//new cvarX2

new zp_round=1
new zp_hm_win=0
new zp_zb_win=0
static iMinutes, iSeconds;
new bool:Restart = false
static Float:g_roundtime, Float:g_roundstart_time
new g_maxplayers

new const hud[][] = {
	"gfx/tga_image/hud_scoreboard_bg_zb3.tga",
	"gfx/tga_image/hud_text_icon_round.tga",
	"gfx/tga_image/hud_text_icon_zb_left.tga",
	"gfx/tga_image/hud_text_icon_hm_right.tga"
}
public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_event("TextMsg", "RestartRound", "a", "2&#Game_C", "2&#Game_w")
	register_event("HLTV", "Event_Round_Start", "a", "1=0", "2=0")
	register_logevent("Log_Round_Start", 2, "1=Round_Start")
	//register_logevent("logevent_round_end", 2, "1=Round_End")
	
	RegisterHam(Ham_Spawn, "player", "Player_Spawn", 1)
	RegisterHam(Ham_Killed, "player", "fwd_Ham_Killed_post", 1); 
	//register_forward(FM_PlayerPreThink, "ShowScoreBoard")
		
	//cvarX = register_cvar("sb_x","0.563")
	//cvarX2 = register_cvar("sb_zb_x","0.5")
	//cvarY = register_cvar("sb_y","0.04")
	
	g_maxplayers = get_maxplayers()
	
	md_init()

	static i
	for(i=0;i<g_maxplayers;i++)
		if(!is_user_bot(i))
			Draw_Time(i)
}
public md_init()
{	
	md_loadfontfile("resource/font/calibrifzy4jw.ttf")
	md_initfont(16, "calibrifzy4jw", 25, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(17, "calibrifzy4jw", 25, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(18, "calibrifzy4jw", 30, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(19, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(20, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	
	static i
	for(i=0;i<sizeof(hud);i++)
		md_loadimage(hud[i])
}
public RestartRound()
{
	zp_round=0
	zp_hm_win=0
	zp_zb_win=0
	iMinutes=0
	iSeconds=0
	Restart = true
}
public Event_Round_Start()
{
	zp_round++
	g_roundtime = floatmul(get_cvar_float("mp_roundtime"), 60.0) - 1.0
}

public Log_Round_Start()
{
	g_roundstart_time = get_gametime()
}
//public logevent_round_end()
public zp_round_ended(winteam)
{
	//if(zp_get_human_count() == 0)
	if(winteam == ZP_TEAM_ZOMBIE)
		zp_zb_win += 1
	else zp_hm_win += 1
	
	g_roundtime = 0.0
	static i
	for(i=0;i<g_maxplayers;i++)
		if(!is_user_bot(i))
			set_task(0.1,"Draw_Round", i)
}

public Player_Spawn(id)
{
	if(!Restart)
		client_cmd(0,"sv_restart 1")
		
	set_task(0.1,"Draw_BG", id)
	set_task(0.1,"Draw_Round", id)
	set_task(0.1,"Draw_Count", id)
}
public fwd_Ham_Killed_post(id)
{
	remove_bg(id)
	remove_text(id)	
}
public Draw_Time(id)
{
	if (is_user_bot(id))
		return	
		
	if(is_user_alive(id))
	{
		static RoundTime[6];	
		
		iMinutes = floatround(g_roundtime-(get_gametime() - g_roundstart_time)) / 60;
		iSeconds = floatround(g_roundtime-(get_gametime() - g_roundstart_time)) % 60;	
	
		if((g_roundtime-(get_gametime() - g_roundstart_time))>0)
		{
			if(iSeconds<10&&iMinutes<10)
				format(RoundTime, charsmax(RoundTime), "0%d:0%d", iMinutes,iSeconds)
			else if(iSeconds<10&&iMinutes>10)
				format(RoundTime, charsmax(RoundTime), "%d:0%d", iMinutes,iSeconds)	
			else if(iSeconds>10&&iMinutes<10)
				format(RoundTime, charsmax(RoundTime), "0%d:%d", iMinutes,iSeconds)	
			else if(iSeconds>10&&iMinutes>10)		
				format(RoundTime, charsmax(RoundTime), "%d:%d", iMinutes,iSeconds)
		}else {
			format(RoundTime, charsmax(RoundTime), "00:00")
		}
		Draw_Count(id)
		md_drawtext(id, 21, RoundTime, 0.5, 0.0736, 1, 0, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
	}
	set_task(1.0,"Draw_Time",id)
}
public Draw_Count(id)
{	
	if (!is_user_alive(id) || is_user_bot(id))
		return	
		
	static Float:NumY = 0.0674
	static zp_hmnum[3], zp_zbnum[3]
	
	format(zp_hmnum, charsmax(zp_hmnum), "%d", zp_get_human_count())
	format(zp_zbnum, charsmax(zp_zbnum), "%d", zp_get_zombie_count())	
	md_drawtext(id, 16, zp_hmnum, 0.553, NumY, 0, 0, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
	md_drawtext(id, 17, zp_zbnum, 0.553, NumY, 0, 0, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_RIGHT)	
}
public Draw_Round(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return	
		
	static MaxRound=33
	static zp_hm_win_str[3], zp_zb_win_str[3], zp_round_str[6]	
	if(zp_round<10)
		format(zp_round_str, charsmax(zp_round_str), "0%d/%d", zp_round, MaxRound)
	else	format(zp_round_str, charsmax(zp_round_str), "%d/%d", zp_round, MaxRound)
	format(zp_hm_win_str, charsmax(zp_hm_win_str), "%d", zp_hm_win)
	format(zp_zb_win_str, charsmax(zp_zb_win_str), "%d", zp_zb_win)
		
	md_drawtext(id, 18, zp_round_str, 0.5, 0.05 , 1, 1, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_NORMAL)		
	md_drawtext(id, 19, zp_hm_win_str, 0.56, 0.04, 1, 1, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
	md_drawtext(id, 20, zp_zb_win_str, 0.56, 0.04, 1, 1, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_RIGHT)	
}
public Draw_BG(id)
{
	if(!is_user_alive(id) || is_user_bot(id))
		return;
	
	md_drawimage(id, 19, 0, hud[0], 0.5,	0.0,	1, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
	md_drawimage(id, 20, 0, hud[1], 0.5,	0.02,	1, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
	md_drawimage(id, 21, 0, hud[2], 0.5,	0.01,	0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_RIGHT)	
	md_drawimage(id, 22, 0, hud[3], 0.5,	0.01,	0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
}
public remove_bg(id)
{
	md_removedrawing(id, 1, 19)
	md_removedrawing(id, 1, 20)
	md_removedrawing(id, 1, 21)
	md_removedrawing(id, 1, 22)
}
public remove_text(id)
{
	md_removedrawing(id, 0, 16)
	md_removedrawing(id, 0, 17)
	md_removedrawing(id, 0, 18)
	md_removedrawing(id, 0, 19)
	md_removedrawing(id, 0, 20)
	md_removedrawing(id, 0, 21)
}
