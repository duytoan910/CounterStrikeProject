/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <hamsandwich>
#include <cstrike>
#include <fakemeta>
#include <fun>
#include <metadrawer>
#include <zombieplague>

#define PLUGIN "Metadrawer Draw Rectangle Test"
#define VERSION "1.0"
#define AUTHOR "Agung"

#define get_user_model(%1,%2,%3) engfunc( EngFunc_InfoKeyValue, engfunc( EngFunc_GetInfoKeyBuffer, %1 ), "model", %2, %3 )

new g_bitHudFlags,	g_number[33]
new bool:Set_Potrait[33]

new size[33][2]

const HUD_HIDE_CAL = 1<<0
const HUD_HIDE_FLASH = 1<<1
const HUD_HIDE_ALL = 1<<2
const HUD_HIDE_RHA = 1<<3
const HUD_HIDE_TIMER = 1<<4
const HUD_HIDE_MONEY = 1<<5
const HUD_HIDE_CROSS = 1<<6
const HUD_DRAW_CROSS = 1<<7

//new cvarX,cvarY

new const hud[][] = {
	"gfx/tga_image/hud_character_bg.tga",
	"gfx/tga_image/hud_weapon_bg.tga",
	"gfx/tga_image/hud_dollar_bg.tga",
	"gfx/tga_image/HP.png",
	"gfx/tga_image/AP.png",
	"gfx/tga_image/portrait/hud_gign.tga",
	"gfx/tga_image/portrait/hud_normalzombie_host.tga"
}

new const Model[][] = {
	"terror","buffclass19s2tr",
	"tank_zombi_host", "deimos_zombi_host", "heavy_zombi_host", "heal_zombi_host",
	"boomer_zombi_origin","stamper_zombi_origin", "witch_zombi_origin",
	"resident_zombi_host","pc_zombi_host","china_zombi_origin","SpitterL4D2",
	"deimos2_zombi_origin"
}
new const Portrait[][] = {
	"terror","buffclass19s2tr",
	"normalzombie_host", "deimoszombie_host", "heavyzombie_host", "healzombie_host",
	"boomerzombie","stamperzombie","witchzombie",
	"residentzombie_host","pczombie_host", "chinazombie","SpitterL4D2",
	"deimos2zombie"
}

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)	
	register_event("Health", "Event_Health", "be")	
	register_event("Damage", "Event_Damage", "be")
	register_event("CurWeapon", "Event_CurWeapon", "be", "1=1")
	
	RegisterHam(Ham_Spawn, "player", "Player_Spawn", 1)
	RegisterHam(Ham_Killed, "player", "Player_Killed", 1); 
	register_forward(FM_PlayerPreThink, "fm_PreThink")
		
	//cvarX = register_cvar("money_x","0.0943")
	//cvarY = register_cvar("money_y","0.27")
	
	g_bitHudFlags |= HUD_HIDE_RHA|HUD_HIDE_MONEY|HUD_HIDE_TIMER|HUD_HIDE_CROSS
	set_msg_block(get_user_msgid("AmmoPickup"), BLOCK_SET)
	set_msg_block(get_user_msgid("WeapPickup"), BLOCK_SET)
	set_msg_block(get_user_msgid("ItemPickup"), BLOCK_SET)
	
	md_init()
}
public md_init()
{	
	md_loadfontfile("resource/font/calibrifzy4jw.ttf")
	md_initfont(10, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(11, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(12, "calibrifzy4jw", 32, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(13, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(14, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(15, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	md_initfont(22, "calibrifzy4jw", 40, FS_ANTIALIAS | FS_OUTLINE, FW_EXTRABOLD)
	
	static i, szDir[60]
	for(i=0;i<sizeof(hud);i++)
		md_loadimage(hud[i])
	for(i=0;i<sizeof(Portrait);i++)
	{
		format(szDir, charsmax(szDir), "gfx/tga_image/portrait/hud_%s.tga", Portrait[i])
		md_loadimage(szDir)
	}
}
public plugin_natives()
{
	register_native("nav_set_portrait","set_model_portrait", 1)
	register_native("nav_reset_money","reset_money", 1)
	register_native("nav_set_special_ammo",	"set_special_ammo", 1)
}
public set_special_ammo(id, val){
	g_number[id] = val
	Draw_Special_Ammo(id)
}
public reset_money(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return
	Draw_Money(id)
}
public Player_Spawn(id)
{
	set_task(0.1,"Draw_BG", id)
	set_task(0.1,"Draw_Text", id)
	
	set_pdata_int(id, 362, 0)
	set_pdata_int(id, 361, g_bitHudFlags)
	
	if (is_user_alive(id))
		set_user_armor(id, 100)	
}
public Player_Killed(id)
{
	if(is_user_bot(id))
		return
		
	remove_bg(id)
	remove_text(id)
}
public Event_Health(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return
	Draw_HP_AP(id)
}

public Event_Damage(id)
{
	static attacker; attacker = get_user_attacker(id)
	if(is_user_connected(attacker))
	{
		Draw_Money(attacker)

		md_drawsprite(attacker, 2, 1, "d_crosshair", 0.5, 0.5, 1, 1, 255, 0, 0, 255, 0.0, 0.0, 0.0, SPR_ADDITIVE, ALIGN_NORMAL, size[attacker][0], size[attacker][1])
		md_drawsprite(attacker, 3, 1, "d_dot", 0.5, 0.5, 1, 1, 255, 0, 0, 255, 0.0, 0.0, 0.0, SPR_ADDITIVE, ALIGN_NORMAL, 3, 3)
	}	
}
public Event_CurWeapon(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return
		
	Draw_Ammo(id)
	set_task(0.0,"Draw_WPN", id)
	if(!Set_Potrait[id])
		if(!is_user_bot(id))
			set_model_portrait(id)

	if(size[id][0]<55 && size[id][1]<55)
	{
		size[id][0] += 9
		size[id][1] += 9
	}
	Draw_CrossHair(id,size[id][0],size[id][1])	

	message_begin(MSG_ONE, get_user_msgid("CurWeapon"), {0,0,0}, id) 
	write_byte(1) 
	write_byte(CSW_KNIFE) 
	write_byte(0) 
	message_end()			
}
public fm_PreThink(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
	{
		md_removedrawing(id, 2, 2)
		return
	}
	
	set_pdata_int(id, 362, 0)
	set_pdata_int(id, 361, g_bitHudFlags)
	
	if(size[id][0]>32 && size[id][1]>32)
	{
		size[id][0] -= 2
		size[id][1] -= 2
	}
	Draw_CrossHair(id,size[id][0],size[id][1])
}
stock Draw_CrossHair(id, width=22, height=22)
{	
	size[id][0] = width;
	size[id][1] = height;
	
	if (!is_user_alive(id) || is_user_bot(id))
	{		
		size[id][0] = -1;
		size[id][1] = -1;
		return size[id];
	}
	md_drawsprite(id, 2, 1, "d_crosshair", 0.5, 0.5, 1, 1, 0, 255, 0, 255, 0.0, 0.0, 0.0, SPR_ADDITIVE, ALIGN_NORMAL, width, height)
	md_drawsprite(id, 3, 1, "d_dot", 0.5, 0.5, 1, 1, 0, 255, 0, 255, 0.0, 0.0, 0.0, SPR_ADDITIVE, ALIGN_NORMAL, 3, 3)
	return size[id];
}
public Draw_Text(id)
{	
	if (!is_user_alive(id) || is_user_bot(id))
		return
		
	Draw_HP_AP(id)
	Draw_Money(id)
	Draw_Ammo(id)
	set_task(0.0,"Draw_WPN", id)
}
public Draw_Ammo(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return

	new szAmmo[10], g_clip,g_ammo;
	new wpn = get_user_weapon(id,g_clip,g_ammo)
	new Float:NumY = 0.001
	
	if(g_clip <1) g_clip = 0
	if(g_ammo <1) g_ammo = 0
		
	if(wpn != CSW_KNIFE)
	{
		if(wpn == CSW_HEGRENADE || wpn == CSW_SMOKEGRENADE || wpn == CSW_FLASHBANG)
		{			
			format(szAmmo, charsmax(szAmmo), "%d", g_ammo)
		}else format(szAmmo, charsmax(szAmmo), "%d | %d", g_clip,/*g_ammo*/ 200)
	}else format(szAmmo, charsmax(szAmmo), "")
	md_drawtext(id, 15, szAmmo, 0.035, NumY, 0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_BOTTOM|ALIGN_RIGHT)
}
public Draw_Special_Ammo(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return

	new szAmmo[2];
	if(g_number[id] != 0){
		format(szAmmo, charsmax(szAmmo), "%d",	g_number[id])
		md_drawtext(id, 22, szAmmo, 0.035, 0.055, 0, 0, 42, 212, 255, 255, 0.0, 0.0, 0.0, ALIGN_BOTTOM|ALIGN_RIGHT)

		emit_sound(id, CHAN_ITEM, "items/9mmclip1.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
	}else{
		md_removedrawing(id, 0, 22)
	}
}
public Draw_WPN(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return
		
	static szModel[32],tmpL[32], tmpR[32];
	pev(id, pev_viewmodel2, szModel, charsmax(szModel))
	
	strtok(szModel, tmpL, charsmax(tmpL), tmpR, charsmax(tmpR),'_')   
	strtok(tmpR, tmpL, charsmax(tmpL), tmpR, charsmax(tmpR),'.')
	if(!zp_get_user_zombie(id)) format(tmpL, charsmax(tmpL), "s_%s", tmpL)
	else format(tmpL, charsmax(tmpL), "s_%s", "zombieknife")
	md_drawsprite(id, 0, 1, "weapon_selection_new", 0.005, 0.11, 0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, SPR_ADDITIVE, ALIGN_RIGHT|ALIGN_BOTTOM, 170, 45)
	md_drawsprite(id, 1, 1, tmpL, 0.005, 0.11, 0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, SPR_ADDITIVE, ALIGN_RIGHT|ALIGN_BOTTOM)
}
public Draw_Money(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return
	
	new szMoney[10]	
	format(szMoney, charsmax(szMoney), "$ %d", zp_get_user_ammo_packs(id))	
	md_drawtext(id, 12, szMoney, 0.05, 0.275, 1, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
}
public Draw_HP_AP(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return
	
	new szHealth[10], szArmor[5]
	new Float:NumY = 0.001
	
	format(szHealth, charsmax(szHealth), "%d", get_user_health(id))
	format(szArmor, charsmax(szArmor), "%d", get_user_armor(id))
	md_drawtext(id, 10, szHealth, 0.03, NumY, 0, 0, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_BOTTOM)
	md_drawtext(id, 11, szArmor, 0.15, NumY, 0, 0, 255,255,255,255, 0.0, 0.0, 0.0, ALIGN_BOTTOM)
}
public Draw_BG(id)
{
	if (!is_user_alive(id) || is_user_bot(id))
		return

	md_drawimage(id, 11, 0, hud[0], 0.0, 0.0, 0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_BOTTOM)
	md_drawimage(id, 12, 0, hud[1], 0.0, 0.0, 0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_BOTTOM|ALIGN_RIGHT)
	md_drawimage(id, 13, 0, hud[2], 0.00, 0.296, 0, 1, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_NORMAL)
	md_drawimage(id, 14, 0, hud[3], 0.02, 0.023, 1, 1, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_BOTTOM)	
	md_drawimage(id, 15, 0, hud[4], 0.14, 0.023, 1, 1, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_BOTTOM)
}
public set_model_portrait(id)
{
	if(is_user_bot(id))
		return;	
		
	if(is_user_alive(id))
	{				
		Set_Potrait[id] = true
		static szUserModel[30],szModel[30], szDir[60];
		get_user_model(id, szUserModel, charsmax(szUserModel));
	
		static i;
		for(i=0;i<sizeof(Model);i++)
		{
			if(equali(szUserModel,Model[i]))
			{
				format(szModel, charsmax(szModel), "%s", Portrait[i])
				break;
			}		
			if(!zp_get_user_zombie(id))
				szModel = "arctic"
			else	szModel = "normalzombie_host"
		}	
		format(szDir, charsmax(szDir), "gfx/tga_image/portrait/hud_%s.tga", szModel)
		md_drawimage(id, 16, 0, szDir, 0.0, 0.05, 0, 0, 255, 255, 255, 255, 0.0, 0.0, 0.0, ALIGN_BOTTOM)	
	}else md_removedrawing(id, 1, 16)
	set_task(0.5, "set_model_portrait", id)
}
public remove_bg(id)
{
	md_removedrawing(id, 1, 11)
	md_removedrawing(id, 1, 12)
	md_removedrawing(id, 1, 13)
	md_removedrawing(id, 1, 14)
	md_removedrawing(id, 1, 15)
	md_removedrawing(id, 1, 16)
	md_removedrawing(id, 2, 0)
	md_removedrawing(id, 2, 1)
	md_removedrawing(id, 2, 2)
	md_removedrawing(id, 2, 3)
}
public remove_text(id)
{
	md_removedrawing(id, 0, 10)
	md_removedrawing(id, 0, 11)
	md_removedrawing(id, 0, 12)
	md_removedrawing(id, 0, 13)
	md_removedrawing(id, 0, 14)
	md_removedrawing(id, 0, 15)	
}
