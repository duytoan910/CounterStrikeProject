/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>
#include <hamsandwich>
#include <nvault>
#include <fun>
#include <xs>
#include <zombieplague>

#define PLUGIN "New Plug-In"
#define VERSION "1.0"
#define AUTHOR "author"

new const zp_cso_zombie_lvlup[] = "zombie_plague/zombi_evolution.wav"
/*
new const zp_cso_evo_hp_lvl[][] =
{
	"0",
	"2000",
	"4000",
	"6000",
	"8000",
	"10000",
	"12000",
	"14500",
	"16000",
	"18000"
}*/

new const zp_cso_evo_hp_lvl[][] =
{
	"0",
	"2500",
	"4500",
	"6500",
	"8500",
	"10500",
	"11500",
	"1250",
	"13500",
	"14500"
}
new g_SyncHud_Kill,g_ham_bot, g_respawn_iconid
new zp_cso_zblvl[33], zp_cso_evomax, zp_cso_evokill[33],zp_cso_evokill2[33], zp_cso_evokillmax, death_count[33]
public plugin_init() 
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_event("DeathMsg", "zp_cso_death", "a", "1>0")
	register_event("HLTV", "event_newround", "a", "1=0", "2=0")
	RegisterHam(Ham_Spawn, "player", "fw_spawn_post", 1)
	
	register_clcmd("say /level","show_level")
	g_SyncHud_Kill = CreateHudSyncObj(18)
}
public client_putinserver(id)
{
	if(!g_ham_bot && is_user_bot(id))
	{
		g_ham_bot = 1
		set_task(0.1, "do_register", id)
	}
}
public do_register(id)
{
	RegisterHamFromEntity( Ham_Spawn, id, "fw_spawn_post", 1 );
}
public plugin_natives()
{
	register_native("zp_cso_get_lvl_health", "zp_cso_native_get_lvl_health", 1)
}
public zp_cso_native_get_lvl_health(id)
{
	return str_to_num(zp_cso_evo_hp_lvl[zp_cso_zblvl[id]]);
}
public test_lvl(id)
{
	client_print(id,print_chat,"Level: %i",zp_cso_zblvl[id]) 
	zp_cso_evolution(id, zp_cso_zblvl[id]+2)
}
public show_level(id)
{
	client_print(id,print_chat,"Level: %i",zp_cso_zblvl[id]) 
	client_print(id,print_chat,"Kill: %i",zp_cso_evokill[id])
	client_print(id,print_chat,"Death: %i",death_count[id])
}
public plugin_precache()
{
	g_respawn_iconid = precache_model("sprites/zb_respawn.spr");
	engfunc(EngFunc_PrecacheSound, zp_cso_zombie_lvlup[0])
}
public event_newround()
{
	new iPlayers[32], iPlayer, iPlayerNum
	get_players(iPlayers, iPlayerNum)
	
	for(new iNum; iNum < iPlayerNum; iNum++)
	{
		iPlayer = iPlayers[iNum]

		zp_cso_evokill[iPlayer] = 0
		zp_cso_evokill2[iPlayer] = 0
		zp_cso_zblvl[iPlayer] = 0
	}
	zp_cso_evokill[iPlayer] = 0
	zp_cso_evokillmax = 2
	zp_cso_evomax = sizeof(zp_cso_evo_hp_lvl)-1
}
public zp_user_humanized_post(id)
{
	zp_cso_zblvl[id] = 0
	zp_cso_evokill[id] = 0
}
public zp_user_infected_post(iPlayer, id, iNemesis)
{
	if ( !id || iNemesis)
		return PLUGIN_CONTINUE
	
	//new iEvolvl[32]

	zp_cso_evokill[id] += 1

	if(zp_cso_zblvl[id] < zp_cso_evomax)
	{
		if(zp_cso_evokill[id] >= zp_cso_evokillmax)
		{
			//zp_cso_zblvl[id] += 1
			//iEvolvl[id] = zp_cso_zblvl[id]
			zp_cso_evokill[id] = 0
			set_hudmessage(0, 255, 0, -1.0, 0.40, 1, 5.0, 5.0)
			ShowSyncHudMsg(id, g_SyncHud_Kill, "Evolution!!!")
			set_weapon_anim(id, 8)
			set_pdata_float(id, 83, 0.5, 5)
			PlaySound(id, zp_cso_zombie_lvlup[0])
			zp_cso_evolution(id, zp_cso_zblvl[id]+1)
			set_task(0.1, "Dead_Effect", id)
		}
	}	
	return PLUGIN_CONTINUE
}

public fw_spawn_post(id)
{
	//client_print(id,print_chat,"Level Up 1!")
	if(zp_get_user_zombie(id) && !zp_get_user_nemesis(id))
	{
		set_user_health(id, zp_get_zombie_maxhealth(id) + str_to_num(zp_cso_evo_hp_lvl[zp_cso_zblvl[id]]) + )
	}
}

public zp_cso_death()
{
	new attacker = read_data(1)
	new victim = read_data(2) 
	//new iEvolvl[32]

	death_count[victim]++	
	if ((death_count[victim]>=2) && (zp_cso_zblvl[victim] < zp_cso_evomax) && victim != attacker && zp_get_user_zombie(victim) && !zp_get_user_zombie(attacker) && !zp_get_user_nemesis(attacker))
	{
		//zp_cso_zblvl[victim] += 1
		//iEvolvl[victim] = zp_cso_zblvl[victim]
		zp_cso_zblvl[victim]+=1
		death_count[victim]=0
		
		set_hudmessage(0, 255, 0, -1.0, 0.40, 1, 5.0, 5.0)
		ShowSyncHudMsg(victim, g_SyncHud_Kill, "Evolution!!!")
		PlaySound(victim, zp_cso_zombie_lvlup[0])
		set_task(0.1, "Dead_Effect", victim)
	}	
}
zp_cso_evolution(id, Evolution)
{	
	if(!zp_get_user_zombie(id) && zp_get_user_nemesis(id))
		return;
		
	new zp_evo_hp

	zp_evo_hp = get_user_health(id) + str_to_num(zp_cso_evo_hp_lvl[Evolution])
	set_user_health(id, zp_evo_hp)
	zp_cso_zblvl[id]+=1
	
	if(zp_cso_zblvl[id] == 0)
		return;
}
stock PlaySound(id, const sound[])
{
	client_cmd(id, "spk ^"%s^"", sound)
}

public logevent_round_end(id)
{
	new iPlayers[32], iPlayer, iPlayerNum
	get_players(iPlayers, iPlayerNum)
	
	for(new iNum; iNum < iPlayerNum; iNum++)
	{
		iPlayer = iPlayers[iNum]

		zp_cso_evokill[iPlayer] = 0
		zp_cso_evokill2[iPlayer] = 0
		zp_cso_zblvl[iPlayer] = 0
		
		if(zp_get_user_zombie(iPlayer))
		{
			zp_cso_evolution(iPlayer, 0)
		}
	}
}

public Dead_Effect(id)
{
	new Float:fOrigin[3],TE_FLAG
	pev(id, pev_origin, fOrigin)
	
	TE_FLAG |= TE_EXPLFLAG_NODLIGHTS
	TE_FLAG |= TE_EXPLFLAG_NOSOUND
	TE_FLAG |= TE_EXPLFLAG_NOPARTICLES
	
	message_begin(MSG_BROADCAST,SVC_TEMPENTITY); 
	write_byte(TE_EXPLOSION)
	engfunc(EngFunc_WriteCoord, fOrigin[0])
	engfunc(EngFunc_WriteCoord, fOrigin[1])
	engfunc(EngFunc_WriteCoord, fOrigin[2])
	write_short(g_respawn_iconid)
	write_byte(10)
	write_byte(10)
	write_byte(TE_FLAG)
	message_end()
}

stock set_weapon_anim(id, anim)
{
	if(!is_user_alive(id))
		return
		
	set_pev(id, pev_weaponanim, anim)
	
	message_begin(MSG_ONE_UNRELIABLE, SVC_WEAPONANIM, _, id)
	write_byte(anim)
	write_byte(0)
	message_end()	
}